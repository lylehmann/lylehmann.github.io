---
import type { Skill } from '@src/pages/About/skills';

const { skills } = Astro.props;

const languageLevels = {
  Native: 100,
  Fluent: 80,
  Intermediate: 60,
  Basic: 40
};

const email = import.meta.env.PUBLIC_EMAIL;
const linkedin = import.meta.env.PUBLIC_LINKEDIN;
const cvPath = import.meta.env.PUBLIC_CV_PATH;
---

<div class='flex flex-col lg:flex-row gap-5'>
  <div class='flex flex-col gap-5 lg:w-80 order-1 lg:order-2'>
    {
      skills
        .filter((skill) => skill.timeline)
        .map((skill: Skill) => (
          <div class={`border dark:border-zinc-700 rounded-xl shadow-sm flex flex-col ${skill.image ? 'p-0' : 'p-5'}`} key={skill.name}>
            <div class='pt-4 pb-4'>
              <ol class='relative border-l border-gray-200 dark:border-gray-700 ml-6'>
                {skill.timeline.map((item: { date: string; text: string; place: string; location: string; svg: JSX.Element; color: string }) => (
                  <li class='mb-10 ml-6' key={item.date}>
                    <span class={`absolute flex items-center justify-center w-8 h-8 rounded-full -left-4 ${item.color}`}>
                      <item.svg />
                    </span>
                    <span class='text-sm text-gray-600 dark:text-gray-400'>{item.date}</span>
                    <br />
                    <p class='font-semibold text-sm text-gray-800 dark:text-neutral-200'>{item.text}</p>
                    <span class="text-sm text-gray-600 dark:text-gray-400">{item.place}</span>
                    <span class="text-sm text-gray-600 dark:text-gray-400">{item.location}</span>
                  </li>
                ))}
              </ol>
            </div>
          </div>
        ))
    }
    <div class='border dark:border-zinc-700 rounded-xl shadow-sm p-5'>
      <h3 class='font-semibold my-2'>Case Studies</h3>
      <div class='flex flex-col gap-3'>
        <a href='/posts' class='bg-green-500 text-white px-4 py-2 rounded-lg text-center hover:bg-green-600'>View Case Studies</a>
      </div>
    </div>
    <div class='border dark:border-zinc-700 rounded-xl shadow-sm p-5'>
      <h3 class='font-semibold my-2'>Contact</h3>
      <div class='flex flex-col gap-3'>
        <a href={`mailto:${email}`} class='bg-blue-500 text-white px-4 py-2 rounded-lg text-center hover:bg-blue-600'>Email</a>
        <a href={linkedin} target="_blank" rel="noopener noreferrer" class='bg-blue-700 text-white px-4 py-2 rounded-lg text-center hover:bg-blue-800'>LinkedIn</a>
        <a href={cvPath} target="_blank" rel="noopener noreferrer" class='bg-gray-800 text-white px-4 py-2 rounded-lg text-center hover:bg-gray-900'>Download CV</a>
      </div>
    </div>
  </div>
  <div class='flex-1 grid grid-cols-1 md:grid-cols-1 lg:grid-cols-2 gap-5 order-2 lg:order-1'>
    {
      skills
        .filter((skill) => !skill.timeline)
        .map((skill: Skill) => (
          <div class={`border dark:border-zinc-700 rounded-xl shadow-sm flex flex-col ${skill.image ? 'p-0' : 'p-5'} ${skill.name === "Why I'm the Designer You Need" ? 'lg:col-span-2' : ''}`} key={skill.name}>
            {skill.certifications ? (
              <div>
                <h3 class='font-semibold my-2'>{skill.name}</h3>
                <ul class='mt-2 text-sm'>
                  {skill.certifications.map((item: { name: string; institution: string; date: string }) => (
                    <li class='mb-2' key={item.name}>
                      <span class='font-semibold'>{item.name}</span>
                      <br />
                      <span class='text-gray-600 dark:text-gray-400'>{item.institution}</span>
                      <br />
                      <span class='text-gray-600 dark:text-gray-400'>{item.date}</span>
                    </li>
                  ))}
                </ul>
              </div>
            ) : skill.techStack ? (
              <div>
                <h3 class='font-semibold my-2'>{skill.name}</h3>
                <div class='grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4'>
                  {skill.techStack.map((item: { name: string; icon: JSX.Element }) => (
                    <div class='flex flex-col items-center' key={item.name}>
                      <item.icon class='text-6xl' />
                      <span class='text-sm mt-2'>{item.name}</span>
                    </div>
                  ))}
                </div>
              </div>
            ) : skill.skillStack ? (
              <div>
                <h3 class='font-semibold my-2'>{skill.name}</h3>
                <div class='flex flex-wrap gap-2 mt-2 text-sm'>
                  {skill.skillStack
                    .filter((item: { type: string }) => item.type === 'hard')
                    .map((item: { text: string; type: string }) => (
                      <span class={`px-2 py-1 rounded border ${item.type === 'hard' ? 'border-blue-900 text-blue-900 dark:border-blue-400 dark:text-blue-400' : 'border-green-900 text-green-900 dark:border-green-400 dark:text-green-400'}`} key={item.text}>{item.text}</span>
                    ))}
                  {skill.skillStack
                    .filter((item: { type: string }) => item.type === 'soft')
                    .map((item: { text: string; type: string }) => (
                      <span class={`px-2 py-1 rounded border ${item.type === 'hard' ? 'border-blue-900 text-blue-900 dark:border-blue-400 dark:text-blue-400' : 'border-green-900 text-green-900 dark:border-green-400 dark:text-green-400'}`} key={item.text}>{item.text}</span>
                    ))}
                </div>
              </div>
            ) : skill.motivation ? (
              <div>
                <h3 class='font-semibold my-2'>Why I'm the Designer You Need</h3>
                <ol class='list-decimal list-inside mt-2 text-sm'>
                  {skill.motivation.map((item: { name: string; description: string }) => (
                    <li class='mb-2' key={item.name}>
                      <span class='font-semibold'>{item.name}</span>
                      <br />
                      <span class='text-gray-600 dark:text-gray-400'>{item.description}</span>
                    </li>
                  ))}
                </ol>
              </div>
            ) : skill.name === 'Languages' ? (
              <div class='p-5'>
                <h3 class='font-semibold my-2'>{skill.name}</h3>
                <div class='mt-2'>
                  {skill.languages.map((item: { name: string; level: string }) => (
                    <div class='mb-4' key={item.name}>
                      <div class='flex justify-between mb-1'>
                        <span class='font-semibold text-gray-600 dark:text-gray-400'>{item.name}</span>
                        <span class='text-sm text-gray-500 dark:text-gray-400'>{item.level}</span>
                      </div>
                      <div class='w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700'>
                        <div class='bg-blue-600 h-2.5 rounded-full' style={{ width: `${languageLevels[item.level]}%` }}></div>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            ) : null}
          </div>
        ))
    }
  </div>
</div>

<style>
.grid-tech-stack {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 1rem;
}

.border {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  height: auto;
}

.relative {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  height: auto;
}

.mb-10 {
  margin-bottom: 2.5rem;
}

.ml-6 {
  margin-left: 1.5rem;
}

.mb-4 {
  margin-bottom: 1rem;
}

.min-h-[50px] {
  min-height: 50px;
}

.text-zinc-600 {
  color: #4b5563;
}

.dark\:text-zinc-300 {
  color: #d1d5db;
}

.text-gray-900 {
  color: #111827;
}

.dark\:text-white {
  color: #ffffff;
}

.text-base {
  font-size: 1rem;
}

.font-semibold {
  font-weight: 600;
}

.font-normal {
  font-weight: 400;
}

.bg-gray-200 {
  background-color: #e5e7eb;
}

.dark\:bg-gray-700 {
  background-color: #374151;
}

.text-gray-800 {
  color: #1f2937;
}

.dark\:text-gray-200 {
  color: #e5e7eb;
}

.border-l {
  border-left-width: 1px;
}

.border-gray-200 {
  border-color: #e5e7eb;
}

.dark\:border-gray-700 {
  border-color: #374151;
}

.ring-8 {
  box-shadow: 0 0 0 8px rgba(255, 255, 255, 1);
}

.dark\:ring-gray-900 {
  box-shadow: 0 0 0 8px rgba(17, 24, 39, 1);
}

.w-8 {
  width: 2rem;
}

.h-8 {
  height: 2rem;
}

.rounded-full {
  border-radius: 9999px;
}

.absolute {
  position: absolute;
}

.flex {
  display: flex;
}

.items-center {
  align-items: center;
}

.justify-center {
  justify-content: center;
}

.size-6 {
  width: 1.5rem;
  height: 1.5rem;
}

.text-xs {
  font-size: 0.75rem;
}

.text-sm {
  font-size: 0.875rem;
}

.text-gray-600 {
  color: #4b5563;
}

.dark\:text-neutral-400 {
  color: #9ca3af;
}

.text-gray-800 {
  color: #1f2937;
}

.dark\:text-neutral-200 {
  color: #e5e7eb;
}

.ms-6 {
  margin-left: 1.5rem;
}

.mt-3 {
  margin-top: 0.75rem;
}

.space-y-1\.5 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.375rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.375rem * var(--tw-space-y-reverse));
}

.ps-1 {
  padding-left: 0.25rem;
}

.pb-8 {
  padding-bottom: 2rem;
}

.group-last\:pb-0:last-child {
  padding-bottom: 0;
}
</style>
