---
export interface DescriptionItem {
  title: string;
  content: string | string[];
}

export interface Props {
  items: DescriptionItem[];
}

const { items } = Astro.props;
import { FigmaSvg, SlackSvg } from '@src/components/svgs.tsx';
---

<div class="max-w-2xl mx-auto border-t border-b border-gray-300 dark:border-gray-600 p-6">
  <dl class="grid grid-cols-1 md:grid-cols-5 gap-x-4 gap-y-6">
    {items.map((item) => (
      <Fragment>
        <dt class="font-semibold text-gray-900 dark:text-white text-sm md:text-base col-span-1 md:col-span-1">
          {item.title}
        </dt>
        <dd class="text-sm md:text-base col-span-1 md:col-span-4">
          {Array.isArray(item.content) ? (
            <div class="flex flex-wrap gap-2 items-center">
              {item.content.map((contentItem) => (
                contentItem === 'Figma' ? (
                  <div class="flex items-center gap-1 border border-gray-300 dark:border-gray-600 rounded px-2 py-1">
                    <FigmaSvg class="w-4 h-4 text-current" />
                    <span class="text-xs md:text-sm text-gray-700 dark:text-gray-300">{contentItem}</span>
                  </div>
                ) : contentItem === 'Slack' ? (
                  <div class="flex items-center gap-1 border border-gray-300 dark:border-gray-600 rounded px-2 py-1">
                    <SlackSvg class="w-4 h-4 text-current" />
                    <span class="text-xs md:text-sm text-gray-700 dark:text-gray-300">{contentItem}</span>
                  </div>
                ) : (
                  <span class="border border-gray-300 dark:border-gray-600 rounded px-2 py-1 text-xs md:text-sm text-gray-700 dark:text-gray-300">
                    {contentItem}
                  </span>
                )
              ))}
            </div>
          ) : (
            <span class="text-gray-700 dark:text-gray-300">{item.content}</span>
          )}
        </dd>
      </Fragment>
    ))}
  </dl>
</div>
