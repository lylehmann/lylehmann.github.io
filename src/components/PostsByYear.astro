---
import type { CollectionEntry } from 'astro:content';
import PostItem from './PostItem.astro';

type BlogPost = CollectionEntry<'blog'>;
const { posts } = Astro.props;

function groupPostsByYear(posts: BlogPost[]) {
	const grouped = posts.reduce(
		(acc, post) => {
			const year = post.data.pubDate.getFullYear();
			if (!acc[year]) {
				acc[year] = [];
			}
			acc[year].push(post);
			return acc;
		},
		{} as Record<number, BlogPost[]>
	);

	return Object.entries(grouped)
		.sort(([a], [b]) => Number(b) - Number(a))
		.map(([year, posts]) => ({
			year: Number(year),
			posts: posts.sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime())
		}));
}

const groupedPosts = groupPostsByYear(posts);
---

{posts.map((post: BlogPost) => <PostItem post={post} />)}
